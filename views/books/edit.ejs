<h4 class="text-white"><strong>Edit Book</strong></h4>
<hr class="text-white">

<div class="text-center text-dark">
  <!-- Updated form action attribute to dynamically generate the correct route -->
  <form class="row g-3" action="/books/<%= book.id %>?_method=PUT" method="POST" id="bookEditForm">
    <!-- Title -->
    <div class="col-md-6">
      <div class="form-floating me-3">
        <input type="text" class="form-control" name="title" value="<% book.title %>" placeholder="">
        <label for="floatingInput"><strong>Title of the book</strong></label>
      </div>
    </div>
    <!-- Author -->
    <div class="col-6 mb-3">
      <div class="form-floating me-3">
        <select class="form-control" name="author" aria-label="Select Authors">
          <% authors.forEach(author => { %>
          <% if (author.id === book.author) { %>
          <option selected label="<%= author.name %>" value="<%= author.id %>">
            <% } else { %>
          <option label="<%= author.name %>" value="<%= author.id %>">
            <% } %>
            <% }) %>
        </select>
        <label for="floatingInput"><strong>Authors</strong></label>
      </div>
    </div>
    <!-- Date -->
    <div class="col-md-6">
      <div class="form-floating me-3">
        <input type="date" class="form-control" name="publishDate" value="<% book.publishDate == null ? '' : book.publishDate.toISOString().split('T')[0] %>" placeholder="">
        <label for="floatingInput"><strong>Publish date of the book</strong></label>
      </div>
    </div>
    <!-- Page Count -->
    <div class="col-md-6">
      <div class="form-floating me-3">
        <input type="number" inputmode="numeric" min="1" class="form-control" id="floatingInput" name="pageCount" value="<% book.pageCount %>" placeholder="">
        <label for="floatingInput"><strong>Page Count</strong></label>
      </div>
    </div>
    <!-- Cover -->
    <div class="col-md-6">
      <div class="me-3">
        <label class="text-white"><strong>Book Cover</strong></label>
        <input type="file" class="filepond" name="cover" placeholder="">
      </div>
    </div>
    <!-- Description -->
    <div class="col-md-6">
      <div class="form-floating me-3">
        <textarea type="text" class="form-control" style="height: 200px;" name="description" placeholder=""><%= book.description %></textarea>
        <label for="floatingInput"><strong>Book Description</strong></label>
      </div>
    </div>
    <!-- Submit -->
    <div class="col-md-12">
      <div class="text-center mt-3 d-block">
        <button type="submit" id="updateBookButton" class="btn btn-outline-success w-25">Update</button>
        <a type="button" class="btn btn-outline-danger w-25" href="/books">Cancel</a>
      </div>
    </div>
  </form>
</div>

<!-- Add New Book -->
<script>
  // Add an event listener to the form
  bookEditForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const bookId = <%= book.id %>;
    const formData = new FormData(bookEditForm);
    try {
      const response = await axios.put(`/books/${bookId}`, formData);

      if (response.data && response.data.success) {
        Swal.fire({
          toast: true,
          icon: 'success',
          iconColor: '#fff',
          color: '#fff',
          title: 'Success',
          position: 'top-right',
          background: '#00ff00',
          showConfirmButton: false,
          timer: 1000,
          timerProgressBar: true,
          text: "Book updated successfully!"
        }).then(() => {
          window.location.href = '/books';
        });
      } else {
        console.log(error);
        Swal.fire({
          toast: true,
          icon: 'error',
          iconColor: '#fff',
          color: '#fff',
          title: 'Error',
          position: 'top-right',
          background: '#cc0000',
          showConfirmButton: false,
          timer: 1000,
          timerProgressBar: true,
          text: 'Error updating book!'
        });
      }
    } catch (error) {
      console.log(error);
      Swal.fire({
        toast: true,
        icon: 'error',
        iconColor: '#fff',
        color: '#fff',
        title: 'Error',
        position: 'top-right',
        background: '#cc0000',
        showConfirmButton: false,
        timer: 1000,
        timerProgressBar: true,
        text: 'Error updating book!'
      });
    }
  });
</script>